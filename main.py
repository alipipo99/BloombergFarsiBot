# BloombergFarsiBot - Ø§Ø®Ø¨Ø§Ø± Ø§Ù†Ú¯Ù„ÛŒØ³ÛŒ Ø§Ø² Ø¨Ù„ÙˆÙ…Ø¨Ø±Ú¯ Ø¨Ø§ Ù¾Ø®Ø´ Ø²Ù†Ø¯Ù‡

import logging
import feedparser
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# ---------------- ØªÙ†Ø¸ÛŒÙ…Ø§Øª Ø§ØµÙ„ÛŒ ----------------
BOT_TOKEN = "7687238301:AAGXMxVR4EDlR284kM4SdDCoEtPZoIMVZb8"
BLOOMBERG_FEED = "https://feeds.bloomberg.com/markets/news.rss"
LIVE_URL = "https://www.youtube.com/@Bloomberg/live"
CHANNEL_ID = "-1002006111361"

# ---------------- ØªÙ†Ø¸ÛŒÙ…Ø§Øª Ù„Ø§Ú¯ ----------------
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# ---------------- Ø¯Ø³ØªÙˆØ± /start ----------------
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "Welcome to BloombergFarsiBot!\nUse /live to watch Bloomberg Live.\nUse /news to get latest Bloomberg headlines."
    )

# ---------------- Ø¯Ø³ØªÙˆØ± /live ----------------
async def live(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(f"ðŸ“º Bloomberg Live:\n{LIVE_URL}")

# ---------------- Ø¯Ø³ØªÙˆØ± /news ----------------
async def news(update: Update, context: ContextTypes.DEFAULT_TYPE):
    feed = feedparser.parse(BLOOMBERG_FEED)
    if not feed.entries:
        await update.message.reply_text("No news found from Bloomberg.")
        return

    messages = ["ðŸ“° Latest Bloomberg Headlines:"]
    for entry in feed.entries[:10]:
        messages.append(f"â€¢ {entry.title}\n{entry.link}")

    text = "\n\n".join(messages)
    await context.bot.send_message(chat_id=CHANNEL_ID, text=text)

# ---------------- Ø±Ø§Ù‡â€ŒØ§Ù†Ø¯Ø§Ø²ÛŒ Ø±Ø¨Ø§Øª ----------------
def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("live", live))
    app.add_handler(CommandHandler("news", news))
    app.run_polling()

if __name__ == '__main__':
    main()
